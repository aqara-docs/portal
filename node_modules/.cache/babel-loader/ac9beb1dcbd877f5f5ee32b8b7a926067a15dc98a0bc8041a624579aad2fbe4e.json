{"ast":null,"code":"var _jsxFileName = \"/Users/aqaralife/Documents/GitHub/portal/src/components/Timer/OrderPicker.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { OpenAI } from '../../services/openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n_c = Container;\nconst Card = styled.div`\n  background: white;\n  border-radius: 10px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n`;\n_c2 = Card;\nconst CharacterCard = styled.div`\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n  margin-bottom: 1rem;\n  border-left: 5px solid ${props => {\n  switch (props.role) {\n    case '발표자':\n      return '#3b82f6';\n    case '질문자':\n      return '#10b981';\n    case '토론자':\n      return '#f59e0b';\n    default:\n      return '#6b7280';\n  }\n}};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n_c3 = CharacterCard;\nconst Input = styled.input`\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #e2e8f0;\n  border-radius: 8px;\n  font-size: 1rem;\n  margin-bottom: 1rem;\n\n  &:focus {\n    border-color: #3b82f6;\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n_c4 = Input;\nconst Button = styled.button`\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: ${props => props.loading ? 'wait' : 'pointer'};\n  opacity: ${props => props.loading ? 0.7 : 1};\n  transition: all 0.3s ease;\n  margin-right: 1rem;\n  \n  ${props => props.primary ? `\n    background: #3b82f6;\n    color: white;\n    &:hover { background: #2563eb; }\n  ` : `\n    background: #e2e8f0;\n    color: #1f2937;\n    &:hover { background: #cbd5e1; }\n  `}\n`;\n_c5 = Button;\nconst Title = styled.h2`\n  color: #1f2937;\n  margin-bottom: 1.5rem;\n  font-size: 1.8rem;\n`;\n_c6 = Title;\nconst Subtitle = styled.h3`\n  color: #4b5563;\n  margin-bottom: 1rem;\n  font-size: 1.2rem;\n`;\n_c7 = Subtitle;\nconst LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border: 3px solid #f3f3f3;\n  border-top: 3px solid #3498db;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-right: 8px;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n_c8 = LoadingSpinner;\nconst SpecialEffect = styled.span`\n  color: #ef4444;\n  font-weight: 600;\n`;\n_c9 = SpecialEffect;\nconst AbilityText = styled.span`\n  color: #059669;\n  font-weight: 500;\n`;\n_c10 = AbilityText;\nconst OrderPicker = ({\n  onOrderChange\n}) => {\n  _s();\n  const [participants, setParticipants] = useState('');\n  const [orderedList, setOrderedList] = useState([]);\n  const [aiSuggestion, setAiSuggestion] = useState('');\n  const [loading, setLoading] = useState(false);\n  const generateOrder = async () => {\n    const names = participants.split(',').map(name => name.trim()).filter(Boolean);\n    if (names.length === 0) {\n      alert('참여자 이름을 입력해주세요.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const prompt = `\n독서토론 참여자들의 역할과 능력을 배정해주세요. 창의적이고 재미있게 작성해주세요.\n참여자: ${names.join(', ')}\n\n각 참여자에게 다음을 배정해주세요:\n1. 역할 (발표자, 질문자, 토론자 중 하나)\n2. 특별한 능력 (예: 논리적 분석, 창의적 해석, 감정적 공감 등)\n3. 특수효과 (시간 +1분, 발언권 2회, 우선 발언 중 하나)\n\n다음 형식으로 응답해주세요:\n이름1:\n- 역할: [역할]\n- 능력: [능력]\n- 특수효과: [특수효과]\n\n이름2:\n...\n      `;\n      const aiResponse = await OpenAI.generateResponse(prompt);\n      const aiCharacters = parseAIResponse(aiResponse, names);\n      setOrderedList(aiCharacters);\n      onOrderChange(aiCharacters);\n      const suggestionPrompt = `\n위 참여자들의 역할을 고려하여, 효과적인 토론 진행 방법을 제안해주세요.\n각 참여자의 능력을 최대한 활용할 수 있는 방법도 포함해주세요.\n      `;\n      const suggestion = await OpenAI.generateResponse(suggestionPrompt);\n      setAiSuggestion(suggestion);\n    } catch (error) {\n      console.error('AI 생성 오류:', error);\n      const defaultCharacters = generateDefaultCharacters(names);\n      setOrderedList(defaultCharacters);\n      onOrderChange(defaultCharacters);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const parseAIResponse = (response, names) => {\n    const characters = [];\n    const sections = response.split('\\n\\n');\n    for (const section of sections) {\n      var _lines$find, _lines$find2, _lines$find3;\n      if (!section.trim()) continue;\n      const lines = section.split('\\n');\n      const name = lines[0].split(':')[0].trim();\n      if (!names.includes(name)) continue;\n      const role = ((_lines$find = lines.find(l => l.includes('역할:'))) === null || _lines$find === void 0 ? void 0 : _lines$find.split(':')[1].trim()) || '토론자';\n      const ability = ((_lines$find2 = lines.find(l => l.includes('능력:'))) === null || _lines$find2 === void 0 ? void 0 : _lines$find2.split(':')[1].trim()) || '일반 토론';\n      const effect = ((_lines$find3 = lines.find(l => l.includes('특수효과:'))) === null || _lines$find3 === void 0 ? void 0 : _lines$find3.split(':')[1].trim()) || '없음';\n      characters.push({\n        id: Math.random().toString(36).substr(2, 9),\n        name,\n        role,\n        ability,\n        specialEffect: effect\n      });\n    }\n    return characters.length === names.length ? characters : generateDefaultCharacters(names);\n  };\n\n  // 기본 캐릭터 생성 함수 (AI 실패시 폴백)\n  const generateDefaultCharacters = names => {\n    const roles = ['발표자', '질문자', '토론자'];\n    const abilities = ['명확한 설명', '깊이 있는 질문', '활발한 토론'];\n    const effects = ['시간 +1분', '발언권 2회', '우선 발언'];\n    return names.map(name => ({\n      id: Math.random().toString(36).substr(2, 9),\n      name,\n      role: roles[Math.floor(Math.random() * roles.length)],\n      ability: abilities[Math.floor(Math.random() * abilities.length)],\n      specialEffect: effects[Math.floor(Math.random() * effects.length)]\n    })).sort(() => Math.random() - 0.5);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"\\uD83C\\uDFAF \\uD1A0\\uB860 \\uC21C\\uC11C \\uC815\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"\\uCC38\\uC5EC\\uC790 \\uC785\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: participants,\n        onChange: e => setParticipants(e.target.value),\n        placeholder: \"\\uCC38\\uC5EC\\uC790 \\uC774\\uB984\\uC744 \\uC27C\\uD45C(,)\\uB85C \\uAD6C\\uBD84\\uD558\\uC5EC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        onClick: generateOrder,\n        disabled: loading,\n        children: [loading && /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 23\n        }, this), loading ? 'AI가 역할을 배정하는 중...' : '🎲 순서 정하기']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setOrderedList([]);\n          setAiSuggestion('');\n          onOrderChange([]);\n          setParticipants('');\n        },\n        children: \"\\uCD08\\uAE30\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), aiSuggestion && /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"\\uD83E\\uDD16 AI\\uC758 \\uD1A0\\uB860 \\uC9C4\\uD589 \\uC81C\\uC548\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: aiSuggestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this), orderedList.length > 0 && /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Subtitle, {\n        children: \"\\uD83D\\uDCCB \\uD1A0\\uB860 \\uC21C\\uC11C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), orderedList.map((character, index) => /*#__PURE__*/_jsxDEV(CharacterCard, {\n        role: character.role,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [index + 1, \". \", character.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC5ED\\uD560: \", character.role]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(AbilityText, {\n            children: [\"\\uB2A5\\uB825: \", character.ability]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(SpecialEffect, {\n            children: [\"\\uD2B9\\uC218\\uD6A8\\uACFC: \", character.specialEffect]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 15\n        }, this)]\n      }, character.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n};\n_s(OrderPicker, \"jM55Y+yIdrmixGanLQwY59v7XeY=\");\n_c11 = OrderPicker;\nexport default OrderPicker;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"CharacterCard\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Title\");\n$RefreshReg$(_c7, \"Subtitle\");\n$RefreshReg$(_c8, \"LoadingSpinner\");\n$RefreshReg$(_c9, \"SpecialEffect\");\n$RefreshReg$(_c10, \"AbilityText\");\n$RefreshReg$(_c11, \"OrderPicker\");","map":{"version":3,"names":["React","useState","styled","OpenAI","jsxDEV","_jsxDEV","Container","div","_c","Card","_c2","CharacterCard","props","role","_c3","Input","input","_c4","Button","button","loading","primary","_c5","Title","h2","_c6","Subtitle","h3","_c7","LoadingSpinner","_c8","SpecialEffect","span","_c9","AbilityText","_c10","OrderPicker","onOrderChange","_s","participants","setParticipants","orderedList","setOrderedList","aiSuggestion","setAiSuggestion","setLoading","generateOrder","names","split","map","name","trim","filter","Boolean","length","alert","prompt","join","aiResponse","generateResponse","aiCharacters","parseAIResponse","suggestionPrompt","suggestion","error","console","defaultCharacters","generateDefaultCharacters","response","characters","sections","section","_lines$find","_lines$find2","_lines$find3","lines","includes","find","l","ability","effect","push","id","Math","random","toString","substr","specialEffect","roles","abilities","effects","floor","sort","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","disabled","onClick","character","index","_c11","$RefreshReg$"],"sources":["/Users/aqaralife/Documents/GitHub/portal/src/components/Timer/OrderPicker.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport { Character } from '../../types/timer';\nimport { OpenAI } from '../../services/openai';\n\nconst Container = styled.div`\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nconst Card = styled.div`\n  background: white;\n  border-radius: 10px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n`;\n\nconst CharacterCard = styled.div<{ role: string }>`\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 1.5rem;\n  margin-bottom: 1rem;\n  border-left: 5px solid ${props => {\n    switch (props.role) {\n      case '발표자': return '#3b82f6';\n      case '질문자': return '#10b981';\n      case '토론자': return '#f59e0b';\n      default: return '#6b7280';\n    }\n  }};\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 1rem;\n  border: 2px solid #e2e8f0;\n  border-radius: 8px;\n  font-size: 1rem;\n  margin-bottom: 1rem;\n\n  &:focus {\n    border-color: #3b82f6;\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst Button = styled.button<{ primary?: boolean; loading?: boolean }>`\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: ${props => props.loading ? 'wait' : 'pointer'};\n  opacity: ${props => props.loading ? 0.7 : 1};\n  transition: all 0.3s ease;\n  margin-right: 1rem;\n  \n  ${props => props.primary ? `\n    background: #3b82f6;\n    color: white;\n    &:hover { background: #2563eb; }\n  ` : `\n    background: #e2e8f0;\n    color: #1f2937;\n    &:hover { background: #cbd5e1; }\n  `}\n`;\n\nconst Title = styled.h2`\n  color: #1f2937;\n  margin-bottom: 1.5rem;\n  font-size: 1.8rem;\n`;\n\nconst Subtitle = styled.h3`\n  color: #4b5563;\n  margin-bottom: 1rem;\n  font-size: 1.2rem;\n`;\n\nconst LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border: 3px solid #f3f3f3;\n  border-top: 3px solid #3498db;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n  margin-right: 8px;\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n`;\n\nconst SpecialEffect = styled.span`\n  color: #ef4444;\n  font-weight: 600;\n`;\n\nconst AbilityText = styled.span`\n  color: #059669;\n  font-weight: 500;\n`;\n\ninterface OrderPickerProps {\n  onOrderChange: (characters: Character[]) => void;\n}\n\nconst OrderPicker: React.FC<OrderPickerProps> = ({ onOrderChange }) => {\n  const [participants, setParticipants] = useState<string>('');\n  const [orderedList, setOrderedList] = useState<Character[]>([]);\n  const [aiSuggestion, setAiSuggestion] = useState<string>('');\n  const [loading, setLoading] = useState(false);\n\n  const generateOrder = async () => {\n    const names = participants.split(',').map(name => name.trim()).filter(Boolean);\n    if (names.length === 0) {\n      alert('참여자 이름을 입력해주세요.');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const prompt = `\n독서토론 참여자들의 역할과 능력을 배정해주세요. 창의적이고 재미있게 작성해주세요.\n참여자: ${names.join(', ')}\n\n각 참여자에게 다음을 배정해주세요:\n1. 역할 (발표자, 질문자, 토론자 중 하나)\n2. 특별한 능력 (예: 논리적 분석, 창의적 해석, 감정적 공감 등)\n3. 특수효과 (시간 +1분, 발언권 2회, 우선 발언 중 하나)\n\n다음 형식으로 응답해주세요:\n이름1:\n- 역할: [역할]\n- 능력: [능력]\n- 특수효과: [특수효과]\n\n이름2:\n...\n      `;\n\n      const aiResponse = await OpenAI.generateResponse(prompt);\n      const aiCharacters = parseAIResponse(aiResponse, names);\n      \n      setOrderedList(aiCharacters);\n      onOrderChange(aiCharacters);\n      \n      const suggestionPrompt = `\n위 참여자들의 역할을 고려하여, 효과적인 토론 진행 방법을 제안해주세요.\n각 참여자의 능력을 최대한 활용할 수 있는 방법도 포함해주세요.\n      `;\n      \n      const suggestion = await OpenAI.generateResponse(suggestionPrompt);\n      setAiSuggestion(suggestion);\n    } catch (error) {\n      console.error('AI 생성 오류:', error);\n      const defaultCharacters = generateDefaultCharacters(names);\n      setOrderedList(defaultCharacters);\n      onOrderChange(defaultCharacters);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const parseAIResponse = (response: string, names: string[]): Character[] => {\n    const characters: Character[] = [];\n    const sections = response.split('\\n\\n');\n    \n    for (const section of sections) {\n      if (!section.trim()) continue;\n      \n      const lines = section.split('\\n');\n      const name = lines[0].split(':')[0].trim();\n      if (!names.includes(name)) continue;\n\n      const role = lines.find(l => l.includes('역할:'))?.split(':')[1].trim() || '토론자';\n      const ability = lines.find(l => l.includes('능력:'))?.split(':')[1].trim() || '일반 토론';\n      const effect = lines.find(l => l.includes('특수효과:'))?.split(':')[1].trim() || '없음';\n\n      characters.push({\n        id: Math.random().toString(36).substr(2, 9),\n        name,\n        role,\n        ability,\n        specialEffect: effect\n      });\n    }\n\n    return characters.length === names.length ? characters : generateDefaultCharacters(names);\n  };\n\n  // 기본 캐릭터 생성 함수 (AI 실패시 폴백)\n  const generateDefaultCharacters = (names: string[]): Character[] => {\n    const roles = ['발표자', '질문자', '토론자'];\n    const abilities = ['명확한 설명', '깊이 있는 질문', '활발한 토론'];\n    const effects = ['시간 +1분', '발언권 2회', '우선 발언'];\n\n    return names\n      .map(name => ({\n        id: Math.random().toString(36).substr(2, 9),\n        name,\n        role: roles[Math.floor(Math.random() * roles.length)],\n        ability: abilities[Math.floor(Math.random() * abilities.length)],\n        specialEffect: effects[Math.floor(Math.random() * effects.length)]\n      }))\n      .sort(() => Math.random() - 0.5);\n  };\n\n  return (\n    <Container>\n      <Title>🎯 토론 순서 정하기</Title>\n      \n      <Card>\n        <Subtitle>참여자 입력</Subtitle>\n        <Input\n          value={participants}\n          onChange={(e) => setParticipants(e.target.value)}\n          placeholder=\"참여자 이름을 쉼표(,)로 구분하여 입력해주세요\"\n          disabled={loading}\n        />\n        <Button primary onClick={generateOrder} disabled={loading}>\n          {loading && <LoadingSpinner />}\n          {loading ? 'AI가 역할을 배정하는 중...' : '🎲 순서 정하기'}\n        </Button>\n        <Button onClick={() => {\n          setOrderedList([]);\n          setAiSuggestion('');\n          onOrderChange([]);\n          setParticipants('');\n        }}>\n          초기화\n        </Button>\n      </Card>\n\n      {aiSuggestion && (\n        <Card>\n          <Subtitle>🤖 AI의 토론 진행 제안</Subtitle>\n          <p>{aiSuggestion}</p>\n        </Card>\n      )}\n\n      {orderedList.length > 0 && (\n        <Card>\n          <Subtitle>📋 토론 순서</Subtitle>\n          {orderedList.map((character, index) => (\n            <CharacterCard key={character.id} role={character.role}>\n              <h4>{index + 1}. {character.name}</h4>\n              <p>역할: {character.role}</p>\n              <p><AbilityText>능력: {character.ability}</AbilityText></p>\n              <p><SpecialEffect>특수효과: {character.specialEffect}</SpecialEffect></p>\n            </CharacterCard>\n          ))}\n        </Card>\n      )}\n    </Container>\n  );\n};\n\nexport default OrderPicker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}