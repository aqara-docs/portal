{"ast":null,"code":"var _jsxFileName = \"/Users/aqaralife/Documents/GitHub/portal/src/components/Timer/Timer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport { OpenAI } from '../../services/openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimerContainer = styled.div`\n  background: white;\n  border-radius: 10px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n`;\n_c = TimerContainer;\nconst TimeDisplay = styled.div`\n  font-size: 4rem;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.color || '#1f2937'};\n  margin: 2rem 0;\n`;\n_c2 = TimeDisplay;\nconst ControlButton = styled.button`\n  padding: 1rem 2rem;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  margin: 0 0.5rem;\n  transition: all 0.3s ease;\n\n  ${props => {\n  switch (props.variant) {\n    case 'start':\n      return `\n          background: #10b981;\n          color: white;\n          &:hover { background: #059669; }\n        `;\n    case 'stop':\n      return `\n          background: #ef4444;\n          color: white;\n          &:hover { background: #dc2626; }\n        `;\n    case 'reset':\n      return `\n          background: #6b7280;\n          color: white;\n          &:hover { background: #4b5563; }\n        `;\n    default:\n      return `\n          background: #e5e7eb;\n          color: #1f2937;\n          &:hover { background: #d1d5db; }\n        `;\n  }\n}}\n`;\n_c3 = ControlButton;\nconst TranscriptArea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  margin: 1rem 0;\n  padding: 1rem;\n  border: 2px solid #e2e8f0;\n  border-radius: 8px;\n  resize: vertical;\n  font-family: inherit;\n\n  &:focus {\n    border-color: #3b82f6;\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n_c4 = TranscriptArea;\nconst AnalysisCard = styled.div`\n  background: #f8fafc;\n  border-radius: 8px;\n  padding: 1.5rem;\n  margin-top: 1rem;\n`;\n_c5 = AnalysisCard;\nconst CharacterInfo = styled.div`\n  margin-bottom: 1rem;\n`;\n_c6 = CharacterInfo;\nconst SpecialEffect = styled.span`\n  font-weight: bold;\n`;\n_c7 = SpecialEffect;\nconst ExtraTurns = styled.span`\n  font-weight: bold;\n`;\n_c8 = ExtraTurns;\nconst ControlPanel = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n`;\n_c9 = ControlPanel;\nconst TranscriptSection = styled.div`\n  margin-bottom: 2rem;\n`;\n_c10 = TranscriptSection;\nconst Timer = ({\n  initialTime,\n  character,\n  onFinish\n}) => {\n  _s();\n  const [time, setTime] = useState(initialTime);\n  const [isRunning, setIsRunning] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [analysis, setAnalysis] = useState('');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [extraTime, setExtraTime] = useState(0);\n  const [extraTurns, setExtraTurns] = useState(0);\n  const intervalRef = useRef();\n  const audioRef = useRef(null);\n  const speechRecognitionRef = useRef(null);\n  useEffect(() => {\n    // 특수 효과 적용\n    if (character !== null && character !== void 0 && character.specialEffect) {\n      switch (character.specialEffect) {\n        case '시간 +1분':\n          setExtraTime(60);\n          break;\n        case '발언권 2회':\n          setExtraTurns(1);\n          break;\n        // 다른 특수 효과들도 추가 가능\n      }\n    }\n\n    // Web Speech API 초기화\n    if ('webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition;\n      speechRecognitionRef.current = new SpeechRecognition();\n      speechRecognitionRef.current.continuous = true;\n      speechRecognitionRef.current.interimResults = true;\n      speechRecognitionRef.current.lang = 'ko-KR';\n      speechRecognitionRef.current.onresult = event => {\n        const transcript = Array.from(event.results).map(result => result[0].transcript).join('');\n        setTranscript(prev => prev + ' ' + transcript);\n      };\n    }\n    return () => {\n      if (speechRecognitionRef.current) {\n        speechRecognitionRef.current.stop();\n      }\n    };\n  }, [character]);\n  useEffect(() => {\n    if (isRunning && time > 0) {\n      intervalRef.current = setInterval(() => {\n        setTime(prev => prev - 1);\n      }, 1000);\n    } else if (time === 0) {\n      handleTimeUp();\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, time]);\n  const handleTimeUp = async () => {\n    setIsRunning(false);\n    if (extraTurns > 0) {\n      setExtraTurns(prev => prev - 1);\n      setTime(initialTime);\n      playNotification('추가 발언 기회가 있습니다.');\n    } else {\n      playTimeUpSound();\n      await analyzeDiscussion();\n      onFinish();\n    }\n  };\n  const startTimer = () => {\n    setIsRunning(true);\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.start();\n    }\n  };\n  const stopTimer = () => {\n    setIsRunning(false);\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.stop();\n    }\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTime(initialTime + extraTime);\n    setTranscript('');\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.stop();\n    }\n  };\n  const playTimeUpSound = async () => {\n    try {\n      const text = `${character === null || character === void 0 ? void 0 : character.name}님의 시간이 종료되었습니다.`;\n      const audioData = await OpenAI.generateSpeech(text);\n      const blob = new Blob([audioData], {\n        type: 'audio/mp3'\n      });\n      const url = URL.createObjectURL(blob);\n      setAudioUrl(url);\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    } catch (error) {\n      console.error('음성 생성 오류:', error);\n    }\n  };\n  const analyzeDiscussion = async () => {\n    if (!transcript.trim()) {\n      alert('토론 내용을 입력해주세요.');\n      return;\n    }\n    setIsAnalyzing(true);\n    try {\n      const result = await OpenAI.analyzeDiscussion(transcript);\n      setAnalysis(result);\n    } catch (error) {\n      console.error('분석 오류:', error);\n      alert('분석 중 오류가 발생했습니다.');\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const playNotification = async message => {\n    try {\n      const audioData = await OpenAI.generateSpeech(message);\n      const blob = new Blob([audioData], {\n        type: 'audio/mp3'\n      });\n      const url = URL.createObjectURL(blob);\n      setAudioUrl(url);\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    } catch (error) {\n      console.error('음성 알림 오류:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TimerContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TimeDisplay, {\n      color: time < 30 ? '#ef4444' : undefined,\n      children: formatTime(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), character && /*#__PURE__*/_jsxDEV(CharacterInfo, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC5ED\\uD560: \", character.role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uB2A5\\uB825: \", character.ability]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), character.specialEffect && /*#__PURE__*/_jsxDEV(SpecialEffect, {\n        children: [\"\\uD2B9\\uC218\\uD6A8\\uACFC: \", character.specialEffect]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 13\n      }, this), extraTurns > 0 && /*#__PURE__*/_jsxDEV(ExtraTurns, {\n        children: [\"\\uB0A8\\uC740 \\uCD94\\uAC00 \\uBC1C\\uC5B8: \", extraTurns, \"\\uD68C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ControlPanel, {\n      children: [/*#__PURE__*/_jsxDEV(ControlButton, {\n        variant: \"start\",\n        onClick: startTimer,\n        disabled: isRunning,\n        children: \"\\uC2DC\\uC791\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        variant: \"stop\",\n        onClick: stopTimer,\n        disabled: !isRunning,\n        children: \"\\uC77C\\uC2DC\\uC815\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ControlButton, {\n        variant: \"reset\",\n        onClick: resetTimer,\n        children: \"\\uCD08\\uAE30\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TranscriptSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD1A0\\uB860 \\uB0B4\\uC6A9 (\\uC74C\\uC131 \\uC778\\uC2DD \\uC911...)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TranscriptArea, {\n        value: transcript,\n        onChange: e => setTranscript(e.target.value),\n        placeholder: \"\\uD1A0\\uB860 \\uB0B4\\uC6A9\\uC774 \\uC5EC\\uAE30\\uC5D0 \\uAE30\\uB85D\\uB429\\uB2C8\\uB2E4...\",\n        readOnly: isRunning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), analysis && /*#__PURE__*/_jsxDEV(AnalysisCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"AI \\uBD84\\uC11D \\uACB0\\uACFC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-line'\n        },\n        children: analysis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: audioUrl || ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"WDw1WYxNH9Mk2tbeFCEjrr16Izo=\");\n_c11 = Timer;\nexport default Timer;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"TimerContainer\");\n$RefreshReg$(_c2, \"TimeDisplay\");\n$RefreshReg$(_c3, \"ControlButton\");\n$RefreshReg$(_c4, \"TranscriptArea\");\n$RefreshReg$(_c5, \"AnalysisCard\");\n$RefreshReg$(_c6, \"CharacterInfo\");\n$RefreshReg$(_c7, \"SpecialEffect\");\n$RefreshReg$(_c8, \"ExtraTurns\");\n$RefreshReg$(_c9, \"ControlPanel\");\n$RefreshReg$(_c10, \"TranscriptSection\");\n$RefreshReg$(_c11, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styled","OpenAI","jsxDEV","_jsxDEV","TimerContainer","div","_c","TimeDisplay","props","color","_c2","ControlButton","button","variant","_c3","TranscriptArea","textarea","_c4","AnalysisCard","_c5","CharacterInfo","_c6","SpecialEffect","span","_c7","ExtraTurns","_c8","ControlPanel","_c9","TranscriptSection","_c10","Timer","initialTime","character","onFinish","_s","time","setTime","isRunning","setIsRunning","transcript","setTranscript","analysis","setAnalysis","isAnalyzing","setIsAnalyzing","audioUrl","setAudioUrl","extraTime","setExtraTime","extraTurns","setExtraTurns","intervalRef","audioRef","speechRecognitionRef","specialEffect","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","Array","from","results","map","result","join","prev","stop","setInterval","handleTimeUp","clearInterval","playNotification","playTimeUpSound","analyzeDiscussion","startTimer","start","stopTimer","resetTimer","text","name","audioData","generateSpeech","blob","Blob","type","url","URL","createObjectURL","play","error","console","trim","alert","formatTime","seconds","mins","Math","floor","secs","toString","padStart","message","children","undefined","fileName","_jsxFileName","lineNumber","columnNumber","role","ability","onClick","disabled","value","onChange","e","target","placeholder","readOnly","style","whiteSpace","ref","src","_c11","$RefreshReg$"],"sources":["/Users/aqaralife/Documents/GitHub/portal/src/components/Timer/Timer.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from '@emotion/styled';\nimport { OpenAI } from '../../services/openai';\nimport { Character } from '../../types/timer';\nimport { SpeechRecognition, SpeechRecognitionEvent } from '../../types/speech';\n\nconst TimerContainer = styled.div`\n  background: white;\n  border-radius: 10px;\n  padding: 2rem;\n  margin-bottom: 2rem;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n`;\n\nconst TimeDisplay = styled.div`\n  font-size: 4rem;\n  font-weight: bold;\n  text-align: center;\n  color: ${props => props.color || '#1f2937'};\n  margin: 2rem 0;\n`;\n\nconst ControlButton = styled.button<{ variant?: 'start' | 'stop' | 'reset' }>`\n  padding: 1rem 2rem;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  margin: 0 0.5rem;\n  transition: all 0.3s ease;\n\n  ${props => {\n    switch (props.variant) {\n      case 'start':\n        return `\n          background: #10b981;\n          color: white;\n          &:hover { background: #059669; }\n        `;\n      case 'stop':\n        return `\n          background: #ef4444;\n          color: white;\n          &:hover { background: #dc2626; }\n        `;\n      case 'reset':\n        return `\n          background: #6b7280;\n          color: white;\n          &:hover { background: #4b5563; }\n        `;\n      default:\n        return `\n          background: #e5e7eb;\n          color: #1f2937;\n          &:hover { background: #d1d5db; }\n        `;\n    }\n  }}\n`;\n\nconst TranscriptArea = styled.textarea`\n  width: 100%;\n  height: 150px;\n  margin: 1rem 0;\n  padding: 1rem;\n  border: 2px solid #e2e8f0;\n  border-radius: 8px;\n  resize: vertical;\n  font-family: inherit;\n\n  &:focus {\n    border-color: #3b82f6;\n    outline: none;\n    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n  }\n`;\n\nconst AnalysisCard = styled.div`\n  background: #f8fafc;\n  border-radius: 8px;\n  padding: 1.5rem;\n  margin-top: 1rem;\n`;\n\nconst CharacterInfo = styled.div`\n  margin-bottom: 1rem;\n`;\n\nconst SpecialEffect = styled.span`\n  font-weight: bold;\n`;\n\nconst ExtraTurns = styled.span`\n  font-weight: bold;\n`;\n\nconst ControlPanel = styled.div`\n  text-align: center;\n  margin-bottom: 2rem;\n`;\n\nconst TranscriptSection = styled.div`\n  margin-bottom: 2rem;\n`;\n\ninterface TimerProps {\n  initialTime: number;\n  character?: Character;\n  onFinish: () => void;\n}\n\nconst Timer: React.FC<TimerProps> = ({ initialTime, character, onFinish }) => {\n  const [time, setTime] = useState(initialTime);\n  const [isRunning, setIsRunning] = useState(false);\n  const [transcript, setTranscript] = useState('');\n  const [analysis, setAnalysis] = useState('');\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [audioUrl, setAudioUrl] = useState<string | null>(null);\n  const [extraTime, setExtraTime] = useState(0);\n  const [extraTurns, setExtraTurns] = useState(0);\n  const intervalRef = useRef<NodeJS.Timeout>();\n  const audioRef = useRef<HTMLAudioElement>(null);\n  const speechRecognitionRef = useRef<SpeechRecognition | null>(null);\n\n  useEffect(() => {\n    // 특수 효과 적용\n    if (character?.specialEffect) {\n      switch (character.specialEffect) {\n        case '시간 +1분':\n          setExtraTime(60);\n          break;\n        case '발언권 2회':\n          setExtraTurns(1);\n          break;\n        // 다른 특수 효과들도 추가 가능\n      }\n    }\n\n    // Web Speech API 초기화\n    if ('webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.webkitSpeechRecognition;\n      speechRecognitionRef.current = new SpeechRecognition();\n      speechRecognitionRef.current.continuous = true;\n      speechRecognitionRef.current.interimResults = true;\n      speechRecognitionRef.current.lang = 'ko-KR';\n\n      speechRecognitionRef.current.onresult = (event: SpeechRecognitionEvent) => {\n        const transcript = Array.from(event.results)\n          .map(result => result[0].transcript)\n          .join('');\n        setTranscript(prev => prev + ' ' + transcript);\n      };\n    }\n\n    return () => {\n      if (speechRecognitionRef.current) {\n        speechRecognitionRef.current.stop();\n      }\n    };\n  }, [character]);\n\n  useEffect(() => {\n    if (isRunning && time > 0) {\n      intervalRef.current = setInterval(() => {\n        setTime(prev => prev - 1);\n      }, 1000);\n    } else if (time === 0) {\n      handleTimeUp();\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, time]);\n\n  const handleTimeUp = async () => {\n    setIsRunning(false);\n    if (extraTurns > 0) {\n      setExtraTurns(prev => prev - 1);\n      setTime(initialTime);\n      playNotification('추가 발언 기회가 있습니다.');\n    } else {\n      playTimeUpSound();\n      await analyzeDiscussion();\n      onFinish();\n    }\n  };\n\n  const startTimer = () => {\n    setIsRunning(true);\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.start();\n    }\n  };\n\n  const stopTimer = () => {\n    setIsRunning(false);\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.stop();\n    }\n  };\n\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTime(initialTime + extraTime);\n    setTranscript('');\n    if (speechRecognitionRef.current) {\n      speechRecognitionRef.current.stop();\n    }\n  };\n\n  const playTimeUpSound = async () => {\n    try {\n      const text = `${character?.name}님의 시간이 종료되었습니다.`;\n      const audioData = await OpenAI.generateSpeech(text);\n      const blob = new Blob([audioData], { type: 'audio/mp3' });\n      const url = URL.createObjectURL(blob);\n      setAudioUrl(url);\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    } catch (error) {\n      console.error('음성 생성 오류:', error);\n    }\n  };\n\n  const analyzeDiscussion = async () => {\n    if (!transcript.trim()) {\n      alert('토론 내용을 입력해주세요.');\n      return;\n    }\n\n    setIsAnalyzing(true);\n    try {\n      const result = await OpenAI.analyzeDiscussion(transcript);\n      setAnalysis(result);\n    } catch (error) {\n      console.error('분석 오류:', error);\n      alert('분석 중 오류가 발생했습니다.');\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const playNotification = async (message: string) => {\n    try {\n      const audioData = await OpenAI.generateSpeech(message);\n      const blob = new Blob([audioData], { type: 'audio/mp3' });\n      const url = URL.createObjectURL(blob);\n      setAudioUrl(url);\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n    } catch (error) {\n      console.error('음성 알림 오류:', error);\n    }\n  };\n\n  return (\n    <TimerContainer>\n      <TimeDisplay color={time < 30 ? '#ef4444' : undefined}>\n        {formatTime(time)}\n      </TimeDisplay>\n\n      {character && (\n        <CharacterInfo>\n          <h3>{character.name}</h3>\n          <p>역할: {character.role}</p>\n          <p>능력: {character.ability}</p>\n          {character.specialEffect && (\n            <SpecialEffect>특수효과: {character.specialEffect}</SpecialEffect>\n          )}\n          {extraTurns > 0 && (\n            <ExtraTurns>남은 추가 발언: {extraTurns}회</ExtraTurns>\n          )}\n        </CharacterInfo>\n      )}\n\n      <ControlPanel>\n        <ControlButton variant=\"start\" onClick={startTimer} disabled={isRunning}>\n          시작\n        </ControlButton>\n        <ControlButton variant=\"stop\" onClick={stopTimer} disabled={!isRunning}>\n          일시정지\n        </ControlButton>\n        <ControlButton variant=\"reset\" onClick={resetTimer}>\n          초기화\n        </ControlButton>\n      </ControlPanel>\n\n      <TranscriptSection>\n        <h3>토론 내용 (음성 인식 중...)</h3>\n        <TranscriptArea\n          value={transcript}\n          onChange={(e) => setTranscript(e.target.value)}\n          placeholder=\"토론 내용이 여기에 기록됩니다...\"\n          readOnly={isRunning}\n        />\n      </TranscriptSection>\n\n      {analysis && (\n        <AnalysisCard>\n          <h3>AI 분석 결과</h3>\n          <div style={{ whiteSpace: 'pre-line' }}>{analysis}</div>\n        </AnalysisCard>\n      )}\n\n      <audio ref={audioRef} src={audioUrl || ''} />\n    </TimerContainer>\n  );\n};\n\nexport default Timer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}